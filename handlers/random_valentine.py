import itertools
import logging
import os
import random
from telegram import Update, InputFile, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler

from phrases import VALENTINE_PHRASES
from states import MessageState


# t.vasiliev    –ò—Å–ø—Ä–∞–≤–∏–ª –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
IMAGES_DIR = "images"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def send_random_valentine(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback

    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if "sent_images" not in context.user_data:
            context.user_data["sent_images"] = []

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        images = [f for f in os.listdir(IMAGES_DIR) if f.endswith(('.jpg', '.png'))]

        if not images:
            await query.message.reply_text("üò¢ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫")
            return

        # –ò—Å–∫–ª—é—á–∞–µ–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        available = [img for img in images if img not in context.user_data["sent_images"]]

        # –ï—Å–ª–∏ –≤—Å–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã - –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞
        # t.vasiliev    –ò—Å–ø—Ä–∞–≤–∏–ª –±–∞–≥ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö –≤–∞–ª–µ–Ω—Ç–∏–Ω–æ–∫
        # if not available:
        #     available = images
        #     context.user_data["sent_images"] = []

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
        selected_image = random.choice(available)
        context.user_data["sent_images"].append(selected_image)
        logger.info("–ö–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        logger.info(context.user_data["sent_images"])
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É
        image_path = os.path.join(IMAGES_DIR, selected_image)
        with open(image_path, "rb") as photo:
            await query.message.reply_photo(
                photo=InputFile(photo),
            )

        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        keyboard = [
            [InlineKeyboardButton("üîÑ –•–æ—á—É –µ—â–µ", callback_data="random_valentine")],
            [InlineKeyboardButton("‚ùå –°–¥–∞—Ç—å—Å—è", callback_data="cancel")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.message.reply_text("–ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=reply_markup)

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        await query.message.reply_text("–í–∞–ª–µ–Ω—Ç–∏–Ω–∫–∏ –∫–æ–Ω—á–∏–ª–∏—Å—å üò≠")