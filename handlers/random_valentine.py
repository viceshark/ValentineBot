import itertools
import logging
import os
import random
from telegram import Update, InputFile, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext, ConversationHandler

from phrases import VALENTINE_PHRASES
from states import MessageState

IMAGES_DIR = "resources/images"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def send_random_valentine(update: Update, context: CallbackContext):
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback

    try:
        #TODO:–í—ã–Ω–µ—Å–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—É—Ü–∏—é —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∞–ª–µ–Ω—Ç–∏–Ω–æ–∫

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
        if "sent_valentines" not in context.user_data:
            context.user_data["sent_valentines"] = []

        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
        images = [f for f in os.listdir(IMAGES_DIR) if f.endswith(('.jpg', '.png'))]
        phrases = VALENTINE_PHRASES
        all_combinations = list(itertools.product(images, phrases))

        if not all_combinations:
            await query.message.reply_text("üò¢ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –≤–∞–ª–µ–Ω—Ç–∏–Ω–æ–∫")
            return

        # –ò—Å–∫–ª—é—á–∞–µ–º —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
        available = [c for c in all_combinations
                     if c not in context.user_data["sent_valentines"]]

        # –ï—Å–ª–∏ –≤—Å–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã - –Ω–∞—á–∏–Ω–∞–µ–º —Å–Ω–∞—á–∞–ª–∞
        if not available:
            available = all_combinations
            context.user_data["sent_valentines"] = []

        # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é
        selected_image, selected_phrase = random.choice(available)
        context.user_data["sent_valentines"].append((selected_image, selected_phrase))

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É
        image_path = os.path.join(IMAGES_DIR, selected_image)
        with open(image_path, "rb") as photo:
            await query.message.reply_photo(
                photo=InputFile(photo),
                caption=selected_phrase
            )

            # –ö–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            keyboard = [
                [InlineKeyboardButton("üîÑ –•–æ—á—É –µ—â–µ", callback_data="random_valentine")],
                [InlineKeyboardButton("–°–¥–∞—Ç—å—Å—è", callback_data="cancel")],
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.message.reply_text("–ß—Ç–æ –¥–∞–ª—å—à–µ?", reply_markup=reply_markup)

            # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–∞
            return MessageState.WAITING_FOR_RANDOM_VALENTINE

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        await query.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞–ª–µ–Ω—Ç–∏–Ω–∫—É")
        return ConversationHandler.END